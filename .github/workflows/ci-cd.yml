name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build production image
        run: |
          docker build -f Dockerfile.prod -t ghcr.io/${{ github.repository_owner }}/searchpy:prod-${{ github.sha }} .

      - name: Push production image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/searchpy:prod-${{ github.sha }}

      - name: Smoke test pushed image
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/searchpy:prod-${{ github.sha }}
        run: |
          # Pull image to runner
          docker pull $IMAGE
          # Run container in background, map port 8000
          cid=$(docker run -d -p 8001:8000 --entrypoint "" $IMAGE sh -c 'uvicorn app.main:app --host 0.0.0.0 --port 8000')
          echo "Started container $cid"
          # Wait for service to be ready (simple loop)
          for i in {1..15}; do
            sleep 1
            if curl -sSf http://127.0.0.1:8001/ >/dev/null; then
              echo "Service responded"
              break
            fi
            echo "Waiting... $i"
          done
          # Check root endpoint
          curl -v http://127.0.0.1:8001/
          docker rm -f $cid || true
